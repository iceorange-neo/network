

计算机网络：
    将地理位置不同具有独立功能的多台计算机及其外部设备、通过通信线路连接起来。
    在网络操作系统、网络管理软件以及网络通信协议的管理和协调下，实现资源共享和信息传递。

网络编程的目的：
    数据共享、信息传递。

做什么？
    1、定位主机、端口、资源
    2、找到主机，如何传输？

网络通信的要素：
    地址：
        ip
        端口号

    规则：网络通信协议
        http、ftp、tcp、udp

网络编程：
    如何定位到网络中的一台或者多台主机
    找到主机之后如何通信

要素：
    端口号和IP
    网络通信协议


IP：
    ip地址：InetAddress    唯一定位一台网络上的计算机   本机是127.0.0.1
    ip地址分类：
        IP地址分类（IPV4、IPV6）
        公网（互联网） - 私网（局域网）


IP相关的类：
    InetAddress 在java.net包下
    获得IP使用该类中的静态方法：
        public static InetAddress getByName(""){}
        public static InetAddress getLocalHost(){}

    InetAddress的对象方法：
        ip.getAddress()


端口相关的类：



通信协议：
    网络通信协议：约定速率、传输码率、传输控制...
    TCP/IP协议簇：【一组协议】
        【重点】
            TCP：用户传输协议  ----->类似全双工  打电话   【需要连接】
            UDP：用户数据报协议 ----->半双工   发短信  发了就不管了 【不用连接】

    TCP和UDP的对比：
        TCP：
            连接、稳定
            三次握手，四次挥手
            客户端、服务端
            传输完成、释放连接、效率低
        UDP：
            不连接、不稳定
            客户端、服务端；没有明确的界限
            随时可发出
            DDOS：洪水攻击。

    三次握手、四次挥手
        A---请求建立连接--->B
        B---响应请求------>A
        A---确定连接------>B

        A---我要断开----->B
        B---你真的断开吗--->A
        B---再次确认是否断开--->A
        A---我真的断开了---->B

TCP:
    客户端:Socket
    服务端:ServerSocket4

文件上传：


UDP:
    不需要连接，只需要对方ip地址端口即可。

